(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     12077,        379]
NotebookOptionsPosition[      9941,        304]
NotebookOutlinePosition[     10818,        335]
CellTagsIndexPosition[     10692,        329]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Remotely executing code within ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " through the xmlRPC Package"
}], "Title",
 CellChangeTimes->{{3.5588771079919167`*^9, 3.558877108047861*^9}}],

Cell["\<\
Dario Malchiodi
Universit\[AGrave] degli Studi di Milano
Dipartimento di Informatica
Via Comelico 39/41 2135 Milano ITALY
malchiodi@di.unimi.it\
\>", "Author",
 CellChangeTimes->{{3.558877016686624*^9, 3.558877049187636*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
        "**", "**"}], "*", "\n", "      ", "Copyright", " ", 
      RowBox[{"(", "C", ")"}], " ", "2010", " ", "Dario", " ", "Malchiodi"}], 
     "<", 
     RowBox[{
      RowBox[{"malchiodi", "@", "di"}], ".", "unimi", ".", "it"}], ">", "\n", 
     "\n", 
     RowBox[{"This", " ", "file", " ", "is", " ", "part", " ", "of", " ", 
      RowBox[{"xmlRPC", ".", "xmlRPC"}], " ", "is", " ", "free", " ", 
      "software"}]}], ";", 
    RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", "\n", 
     RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", " ", 
     "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", "Lesser", 
     " ", "General", " ", "Public", " ", "License", " ", "as", "\n", 
     "published", " ", "by", " ", "the", " ", "Free", " ", "Software", " ", 
     "Foundation"}], ";", 
    RowBox[{
    "either", " ", "version", " ", "2.1", " ", "of", " ", "the", " ", 
     "License"}]}], ",", "\n", 
   RowBox[{"or", " ", 
    RowBox[{"(", 
     RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", " ", 
    "later", " ", 
    RowBox[{"version", ".", "xmlRPC"}], " ", "is", " ", "distributed", " ", 
    "in", " ", "the", " ", "hope", " ", "that", "\n", "it", " ", "will", " ", 
    "be", " ", "useful"}], ",", 
   RowBox[{
    RowBox[{"but", " ", "without", " ", "any", " ", "warranty"}], ";", " ", 
    RowBox[{
    "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", "\n",
      "of", " ", "merchantability", " ", "or", " ", "fitness", " ", "for", 
     " ", "a", " ", "particular", " ", 
     RowBox[{"purpose", ".", "See"}], " ", "the", " ", "GNU", " ", "Lesser", 
     "\n", "General", " ", "Public", " ", "License", " ", "for", " ", "more", 
     " ", 
     RowBox[{"details", ".", " ", "You"}], " ", "should", " ", "have", " ", 
     "received", " ", "a", " ", "copy", " ", "of", "\n", "the", " ", "GNU", 
     " ", "Lesser", " ", "General", " ", "Public", " ", "License", " ", 
     "along", " ", "with", " ", "xmlRPC"}], ";", " ", 
    RowBox[{"if", " ", "not"}]}], ",", " ", 
   RowBox[{
    RowBox[{"see", "\n", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "gnu", ".", "org"}], "/", "licenses"}], "/"}], ">",
      "."}]}]}], "\n", "\n", 
  "******************************************************************************)"}\
]], "Code",
 CellChangeTimes->{{3.5666636506081676`*^9, 3.566663650611328*^9}, {
  3.566663688661222*^9, 3.566663749553742*^9}}],

Cell[CellGroupData[{

Cell["The XML-RPC protocol", "Section"],

Cell[TextData[{
 "The XML-RPC protocol allows to send over the internet the XML encodings of \
method invocations through an HTTPD connection and receiving back the \
corresponding return value (refer to ",
 StyleBox["http://www.xmlrpc.com",
  FontFamily->"Courier",
  FontSize->11],
 " for a thorough exposition). The xmlRPC package handles all the \
communication and protocol management, so that the remote invocation is \
transparent to the user who simply invokes a function."
}], "Text",
 CellChangeTimes->{{3.5588770710272617`*^9, 3.558877075954927*^9}, {
  3.5588771145024433`*^9, 3.558877121310012*^9}, {3.558877169116877*^9, 
  3.5588771707173433`*^9}, {3.558877232054385*^9, 3.558877238990223*^9}, {
  3.55887742078821*^9, 3.55887746145759*^9}, {3.558877500848452*^9, 
  3.5588775014012127`*^9}, {3.558877535596088*^9, 3.558877555256208*^9}, {
  3.558877618438459*^9, 3.558877621989797*^9}, {3.558877659535413*^9, 
  3.558877698819859*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Obtaining and installing the package", "Section"],

Cell[TextData[{
 "The software is available on github at the address ",
 StyleBox["http://github.com/dariomalchiodi/xmlRPC",
  FontFamily->"Courier",
  FontSize->11],
 ", in a repository containing this documentation notebook and the  package \
file ",
 StyleBox["xmlRPC.m",
  FontFamily->"Courier",
  FontSize->11],
 ". The latter should be saved in a directory listed in the ",
 StyleBox["$Path",
  FontFamily->"Courier",
  FontSize->11],
 " variable (a suggested choice is the ",
 StyleBox["Applications",
  FontSlant->"Italic"],
 " directory in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system- or user-based root directory)."
}], "Text",
 CellChangeTimes->{{3.558877735334201*^9, 3.5588777968978233`*^9}, {
  3.558877830437454*^9, 3.558877839466344*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using the package", "Section"],

Cell[TextData[{
 "The package loads as usual in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"<<", "xmlRPC`"}]], "Input",
 CellChangeTimes->{{3.558878773615087*^9, 3.558878773683827*^9}}],

Cell[TextData[{
 "The functions ",
 StyleBox["xmlRPCInit", "Input"],
 " and ",
 StyleBox["xmlRpc", "Input"],
 " are provided. The first allows to set address and port of an XML-RPC \
server:"
}], "Text",
 CellChangeTimes->{
  3.558877875400391*^9, {3.558878802948647*^9, 3.558878803019987*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "xmlRPCInit"}]], "Input",
 CellChangeTimes->{{3.55887878114948*^9, 3.5588787822141533`*^9}}],

Cell[BoxData[
 StyleBox["\<\"xmlRPCInit[address,port] sets the address and port of the \
XML-RPC server to be called\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5588787841665173`*^9},
 CellTags->"Info3558885984-9651005"]
}, Open  ]],

Cell["\<\
Note: the following cells are provided as mere examples and will not work if \
executed. Use existing XML-RPC servers for experimentation purposes.\
\>", "Text"],

Cell[TextData[{
 "Suppose an XML-RPC server is available at the address ",
 StyleBox["xmlrpc.icecreams.com",
  FontFamily->"Courier",
  FontSize->11],
 ", port 3300. The corresponding call to ",
 StyleBox["xmlRPCInit", "Input"],
 " is the following "
}], "Text",
 CellChangeTimes->{{3.5588788574858418`*^9, 3.5588788599497232`*^9}}],

Cell[BoxData[
 RowBox[{"xmlRPCInit", "[", 
  RowBox[{"\"\<xmlrpc.icecreams.com\>\"", ",", " ", "3300"}], "]"}]], "Input",\

 CellChangeTimes->{{3.558878882998391*^9, 3.558878883958373*^9}}],

Cell[TextData[{
 "Once ",
 StyleBox["xmlRpcInit", "InlineInput"],
 " has been colled, ",
 StyleBox["xmlRpc", "InlineInput"],
 " remotely executes a given procedure "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "xmlRPC"}]], "Input",
 CellChangeTimes->{{3.5588788871013937`*^9, 3.55887888799763*^9}}],

Cell[BoxData[
 StyleBox["\<\"xmlRPC[methodName,params] executes the RPC to the method \
methodName using the arguments contained in the list params\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.55887888877759*^9},
 CellTags->"Info3558886088-9651005"]
}, Open  ]],

Cell[TextData[{
 "Suppose the above server provides an ",
 StyleBox["availableIceCreams", "InlineInput",
  FontSlant->"Italic"],
 " method, requesting a string argument denoting a flavor and returning the \
corresponding number of available ice creams. A related call within ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " could be: "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xmlRPC", "[", 
  RowBox[{"\"\<availableIceCreams\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"String", ",", "\"\<chocolate\>\""}], "}"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5588789033278713`*^9, 3.5588789042225637`*^9}}],

Cell[BoxData["\<\"314\"\>"], "Output"]
}, Open  ]],

Cell["\<\
Note how each argument needs to be coupled with the corresponding data type, \
according to the XML-RPC specifications.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section"],

Cell[TextData[{
 "The above described package behavior corresponds to the default value ",
 StyleBox["True", "InlineInput"],
 " of the ",
 StyleBox["\"verbose\"", "InlineInput"],
 " option. When this option is set to ",
 StyleBox["False", "InlineInput"],
 ", each execution of ",
 StyleBox["xmlRpc", "InlineInput"],
 " prints a set of messages containing respectively a reference to the used \
socket object, the text sent and received through the corresponding HTTP \
connection, as well as some verbose output. In both cases ",
 StyleBox["xmlRpc", "InlineInput"],
 " returns the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression corresponding to the return value of the called procedure."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section"],

Cell["\<\
Please send comments to malchiodi@di.unimi.it.\
\>", "Text",
 CellChangeTimes->{{3.558878962028067*^9, 3.558878973906481*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1095, 623},
WindowMargins->{{7, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "AutomatedReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3558885984-9651005"->{
  Cell[6518, 187, 235, 4, 90, "Print",
   CellTags->"Info3558885984-9651005"]},
 "Info3558886088-9651005"->{
  Cell[7790, 230, 266, 5, 126, "Print",
   CellTags->"Info3558886088-9651005"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3558885984-9651005", 10479, 320},
 {"Info3558886088-9651005", 10588, 323}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 212, 6, 240, "Title"],
Cell[794, 30, 235, 7, 148, "Author"],
Cell[1032, 39, 2840, 60, 364, "Code"],
Cell[CellGroupData[{
Cell[3897, 103, 39, 0, 99, "Section"],
Cell[3939, 105, 951, 17, 107, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4927, 127, 55, 0, 99, "Section"],
Cell[4985, 129, 776, 23, 84, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5798, 157, 36, 0, 99, "Section"],
Cell[5837, 159, 116, 5, 39, "Text"],
Cell[5956, 166, 117, 2, 28, "Input"],
Cell[6076, 170, 294, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[6395, 183, 120, 2, 28, "Input"],
Cell[6518, 187, 235, 4, 90, "Print",
 CellTags->"Info3558885984-9651005"]
}, Open  ]],
Cell[6768, 194, 171, 3, 93, "Text"],
Cell[6942, 199, 332, 9, 93, "Text"],
Cell[7277, 210, 189, 4, 42, "Input"],
Cell[7469, 216, 177, 6, 58, "Text"],
Cell[CellGroupData[{
Cell[7671, 226, 116, 2, 42, "Input"],
Cell[7790, 230, 266, 5, 126, "Print",
 CellTags->"Info3558886088-9651005"]
}, Open  ]],
Cell[8071, 238, 353, 9, 93, "Text"],
Cell[CellGroupData[{
Cell[8449, 251, 276, 7, 42, "Input"],
Cell[8728, 260, 38, 0, 42, "Output"]
}, Open  ]],
Cell[8781, 263, 143, 3, 58, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8961, 271, 26, 0, 148, "Section"],
Cell[8990, 273, 718, 17, 160, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9745, 295, 29, 0, 148, "Section"],
Cell[9777, 297, 136, 3, 58, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
